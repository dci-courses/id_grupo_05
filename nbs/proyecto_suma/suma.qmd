---
title: "Suma con los dedos"
format: html
---

<div id="p5-sketch">
  <div id="canvas-container" style="text-align: center; margin: 20px auto;"></div>
</div>

<div id="sum-box" style="display: inline-block; vertical-align: top; margin-right: 20px; padding: 20px; border: 4px solid #FFA500; border-radius: 15px; background-color: #FFEB99; font-size: 24px; color: #FFA500; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);">
  <strong>Suma:</strong>
  <div id="random-sum" style="font-size: 48px; color: #FF4500;"></div>
</div>

<div id="result-box" style="display: inline-block; vertical-align: top; margin-left: 20px; padding: 20px; border: 4px solid #00BFFF; border-radius: 15px; background-color: #B3E5FC; font-size: 24px; color: #00BFFF; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);">
  <strong>Resultado con los dedos:</strong>
  <div id="fingers-result" style="font-size: 48px; color: #0080FF;">0</div>
</div>

<style>
  body {
    font-family: 'Comic Sans MS', 'Comic Sans', sans-serif;
    background-color: #F5F5DC;
    color: #333;
    text-align: center;
  }

  #canvas-container {
    border: 4px solid #FFA500;
    border-radius: 15px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
  }

  #p5-sketch {
    display: inline-block;
    max-width: 100%;
  }

  strong {
    font-size: 1.2em;
    color: #444;
  }

  #sum-box, #result-box {
    font-family: 'Comic Sans MS', 'Comic Sans', sans-serif;
  }

  .correct {
    border-color: #32CD32 !important;
    background-color: #98FB98 !important;
  }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js"></script>
<script src="https://unpkg.com/ml5@1/dist/ml5.min.js"></script>

<script>
(function() {
  let handPose;
  let video;
  let hands = [];
  let currentSum;
  let sumCorrect = false;
  let canCapture = true;

  const sketch = (p) => {

    
    
    p.preload = function() {
      handPose = ml5.handPose();
    };

    p.setup = function() {
      p.createCanvas(640, 480).parent('canvas-container');
      currentSum = generateRandomSum();
      video = p.createCapture(p.VIDEO);
      video.size(640, 480);
      video.hide();
      handPose.detectStart(video, gotHands);
    };

    p.draw = function() {
      p.image(video, 0, 0, p.width, p.height);
    };

    function generateRandomSum() {
      const num1 = Math.floor(Math.random() * 6); 
      const num2 = Math.floor(Math.random() * 6); 
      const sum = num1 + num2;
      document.getElementById('random-sum').innerText = `${num1} + ${num2}`;
      return sum;
    }


    function gotHands(results) {

      if (canCapture) {

        hands = results;
    
        if(hands[0] != undefined) {
          let middle = verifyStretchedFinger(hands[0], 2);
          let index = verifyStretchedFinger(hands[0], 1);
          let thumb = verifyStretchedFinger(hands[0], 0);
          let ring = verifyStretchedFinger(hands[0], 3);
          let pinky = verifyStretchedFinger(hands[0], 4);
              
          let fingers = [middle, index, thumb, ring, pinky];
          
          fingersRaised(fingers)
        }
    
        if (hands[0] != undefined && hands[1] != undefined) {
          let middle = verifyStretchedFinger(hands[0], 2);
          let index = verifyStretchedFinger(hands[0], 1);
          let thumb = verifyStretchedFinger(hands[0], 0);
          let ring = verifyStretchedFinger(hands[0], 3);
          let pinky = verifyStretchedFinger(hands[0], 4);
          let middleR = verifyStretchedFinger(hands[1], 2);
          let indexR = verifyStretchedFinger(hands[1], 1);
          let thumbR = verifyStretchedFinger(hands[1], 0);
          let ringR = verifyStretchedFinger(hands[1], 3);
          let pinkyR = verifyStretchedFinger(hands[1], 4);
          
          let fingers = [middle, index, thumb, ring, pinky, middleR, indexR, thumbR, ringR, pinkyR];
          
          fingersRaised(fingers)
        }
    
        if (hands[1] != undefined) {
          let middleR = verifyStretchedFinger(hands[1], 2);
          let indexR = verifyStretchedFinger(hands[1], 1);
          let thumbR = verifyStretchedFinger(hands[1], 0);
          let ringR = verifyStretchedFinger(hands[1], 3);
          let pinkyR = verifyStretchedFinger(hands[1], 4);

          let fingers = [middleR, indexR, thumbR, ringR, pinkyR];
        }

        canCapture = false;  
        setTimeout(() => { canCapture = true; }, 1000);  
      }
  
    }

    function verifyStretchedFinger(hand, index) {
      switch (index) {
        case 0:
          if (calculateDistance(hand.thumb_cmc, hand.thumb_tip) < 100) return false;
          return true;
        case 1:
          if (hand.index_finger_pip.y - hand.index_finger_tip.y < 1) return false;
          return true;
        case 2:
          if (hand.middle_finger_pip.y - hand.middle_finger_tip.y < 1) return false;
          return true;
        case 3:
          if (hand.ring_finger_pip.y - hand.ring_finger_tip.y < 1) return false;
          return true;
        case 4:
          if (hand.pinky_finger_pip.y - hand.pinky_finger_tip.y < 1) return false;
          return true;
      }
    }

    function fingersRaised(fingers) {
  let fingersRaised = 0;
  for (let i = 0; i < fingers.length; i++) {
    if (fingers[i]) {
      fingersRaised++;
    }
  }

  if (!sumCorrect && fingersRaised === currentSum) {
    sumCorrect = true;
    
    document.getElementById('result-box').style.borderColor = 'green';
    document.getElementById('fingers-result').innerText = currentSum;
    document.getElementById('result-box').style.backgroundColor = 'lightgreen';

    setTimeout(() => {
      document.getElementById('result-box').style.borderColor = '#000';
      document.getElementById('result-box').style.backgroundColor = '#fff';
      currentSum = generateRandomSum();
      document.getElementById('fingers-result').innerText = 0; 
      sumCorrect = false; 
    }, 2000);
  } else if (!sumCorrect) {
    document.getElementById('fingers-result').innerText = fingersRaised;
  }
}

    function calculateDistance(p1, p2) {
      return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
    }
  };

  new p5(sketch);
})();
</script>